{"version":3,"sources":["components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Contacts/Contacts.styles.jsx","components/Contacts/Contacts.jsx","components/Form/Form.styles.jsx","components/Form/Form.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["Container","Title","Section","title","children","ContactItem","BtnDelete","BtnText","NumberText","Contacts","options","onDelete","map","id","name","number","size","type","onClick","WrapperForm","BtnAdd","Input","InputTitle","Form","onSubmit","useState","setName","setNumber","handleInputChange","event","currentTarget","value","resetForm","preventDefault","pattern","required","onChange","ContactTitle","InputFind","Filter","App","JSON","parse","localStorage","getItem","contacts","setContact","filter","setFilter","useEffect","window","setItem","stringify","data","find","contact","toLowerCase","alert","prevState","uuidv4","normalizedFilter","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c1fa119.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\nwidth: 500px;\nmargin: 0 auto;\n`;\n\nexport const Title = styled.h2`\nmargin-bottom: 20px;\ntext-align: center;\ncolor: #2d2b2b;\n`;","import PropTypes from 'prop-types';\nimport { Container, Title } from './Section.styles';\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        {children}\n    </Container>\n)\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;","import styled from '@emotion/styled/macro';\n\nexport const ContactItem = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: 10px;\nlist-style: none;\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover {\n    color: #3561d0;\n}\n`;\n\nexport const BtnDelete = styled.button`\ndisplay: inline-flex;\nalign-items: center;\npadding: 5px;\nborder-color: transparent;\nborder-radius: 5px;\nbackground-color: #c7cace;\ntext-transform: uppercase;\ncursor: pointer;\n\n&:hover {\n    background-color: #3561d0;\n    color: #fff;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n`; \n\nexport const BtnText = styled.span`\nmargin-right: 5px;\n`;\n\nexport const NumberText = styled.span`\nmargin-right: 30px;\nmargin-left: 10px\n`;","import { ContactItem, BtnText, BtnDelete, NumberText } from './Contacts.styles';\nimport PropTypes from 'prop-types';\nimport { BsFillPersonDashFill } from 'react-icons/bs';\nimport { BiWinkSmile } from 'react-icons/bi';\n\nconst Contacts = ({ options, onDelete }) => (\n    <ul>\n        {options.map(({id, name, number}) => {\n            return (<ContactItem key={id}>\n                <BiWinkSmile size={18}/>\n                {name}:\n                <NumberText>{number}</NumberText>\n                <BtnDelete type=\"button\" onClick={() => onDelete(id)}>\n                    <BtnText>Delete</BtnText>\n                    <BsFillPersonDashFill size={16}/>\n                    </BtnDelete>\n            </ContactItem>)\n        })}\n        \n    </ul>\n)\n\nContacts.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }),\n    ),\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default Contacts;","import styled from '@emotion/styled/macro';\n\nexport const WrapperForm = styled.div`\n  margin-bottom: 20px;\n  padding: 20px;\n  box-shadow: 0px 1px 5px 1px rgba(34, 60, 80, 0.4);\n`;\n\nexport const BtnAdd = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 7px;\n  border-color: transparent;\n  border-radius: 5px;\n  background-color: #c7cace;\n  text-transform: uppercase;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  &:hover {\n    background-color: #3561d0;\n    color: #fff;\n  }\n`;\n\nexport const BtnText = styled.span`\n  margin-right: 5px;\n`;\n\nexport const Container = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  border-color: #a29f9f;\n  border-radius: 5px;\n  &:hover {\n    border-color: #0741d3;\n  }\n`;\n\nexport const InputTitle = styled.p`\n  margin-bottom: 10px;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  WrapperForm,\n  BtnAdd,\n  BtnText,\n  Container,\n  Input,\n  InputTitle,\n} from './Form.styles';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <WrapperForm>\n      <form onSubmit={handleSubmit}>\n        <Container>\n          <label>\n            <InputTitle>Name</InputTitle>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \n                        Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={handleInputChange}\n            />\n          </label>\n        </Container>\n\n        <Container>\n          <label>\n            <InputTitle>Number</InputTitle>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, \n                        круглые скобки и может начинаться с +\"\n              required\n              onChange={handleInputChange}\n            />\n          </label>\n        </Container>\n\n        <BtnAdd type=\"submit\">\n          <BtnText>Add contact</BtnText>\n          <BsFillPersonPlusFill size={16} />\n        </BtnAdd>\n      </form>\n    </WrapperForm>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  onChangeInput: PropTypes.func,\n};\n\nexport default Form;\n","import styled from '@emotion/styled/macro';\n\nexport const ContactTitle = styled.h3`\nmargin-bottom: 10px;\n`;\n\nexport const InputFind = styled.input`\nmargin-bottom: 20px;\nborder-color: #a29f9f;\nborder-radius: 5px;\n\n&:hover {\n    border-color: #0741d3;\n}\n`;","import { ContactTitle, InputFind } from './Filter.styles';\nimport PropTypes from 'prop-types';\n\nfunction Filter({value, onChange}) {\n    return (\n        <div>\n            <ContactTitle>Find contacts by name</ContactTitle> \n            <InputFind\n                type=\"text\"\n                value={value}\n                onChange={onChange}\n            />\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport Section from './components/Section/Section';\nimport Contacts from './components/Contacts/Contacts';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const [contacts, setContact] = useState(\n    () => JSON.parse(localStorage.getItem('contacts')) ?? [],\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = data => {\n    if (\n      contacts.find(\n        contact => data.name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${data.name} is already in contacts.`);\n    } else {\n      setContact(prevState => [...prevState, { ...data, id: uuidv4() }]);\n    }\n  };\n\n  const changeFilter = event => setFilter(event.currentTarget.value);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContact(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form onSubmit={formSubmitHandler} />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={changeFilter} />\n        <Contacts\n          options={getVisibleContacts()}\n          onDelete={deleteContact}\n        ></Contacts>\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}